[{"/home/bob/Desktop/training/frontend/movie-db/src/App.tsx":"1","/home/bob/Desktop/training/frontend/movie-db/src/index.tsx":"2","/home/bob/Desktop/training/frontend/movie-db/src/components/Profile.tsx":"3","/home/bob/Desktop/training/frontend/movie-db/src/components/auth/LoginButton.tsx":"4","/home/bob/Desktop/training/frontend/movie-db/src/components/auth/SignupButton.tsx":"5","/home/bob/Desktop/training/frontend/movie-db/src/components/auth/LogoutButton.tsx":"6","/home/bob/Desktop/training/frontend/movie-db/src/service/index.ts":"7","/home/bob/Desktop/training/frontend/movie-db/src/components/MovieList.tsx":"8","/home/bob/Desktop/training/frontend/movie-db/src/components/MovieCard.tsx":"9","/home/bob/Desktop/training/frontend/movie-db/src/components/MoviePage.tsx":"10","/home/bob/Desktop/training/frontend/movie-db/src/components/SearchList.tsx":"11","/home/bob/Desktop/training/frontend/movie-db/src/auth0-provider-with-history.tsx":"12","/home/bob/Desktop/training/frontend/movie-db/src/components/BrowsePagination.tsx":"13","/home/bob/Desktop/training/frontend/movie-db/src/components/navbar/SearchBox.tsx":"14","/home/bob/Desktop/training/frontend/movie-db/src/components/navbar/NavBar.tsx":"15","/home/bob/Desktop/training/frontend/movie-db/src/components/HomePage.tsx":"16","/home/bob/Desktop/training/frontend/movie-db/src/components/LandingPage.tsx":"17","/home/bob/Desktop/training/frontend/movie-db/src/components/filter/FilterButton.tsx":"18","/home/bob/Desktop/training/frontend/movie-db/src/components/filter/FilterOptions.tsx":"19","/home/bob/Desktop/training/frontend/movie-db/src/components/PageCounter.tsx":"20","/home/bob/Desktop/training/frontend/movie-db/src/components/FilterPageCounter.tsx":"21","/home/bob/Desktop/training/frontend/movie-db/src/components/commentsection/Comment.tsx":"22","/home/bob/Desktop/training/frontend/movie-db/src/components/commentsection/CommentList.tsx":"23","/home/bob/Desktop/training/frontend/movie-db/src/components/commentsection/CommentForm.tsx":"24","/home/bob/Desktop/training/frontend/movie-db/src/components/Analytics.tsx":"25"},{"size":2695,"mtime":1612760926214,"results":"26","hashOfConfig":"27"},{"size":373,"mtime":1612420777794,"results":"28","hashOfConfig":"27"},{"size":574,"mtime":1612759927344,"results":"29","hashOfConfig":"27"},{"size":396,"mtime":1612753353463,"results":"30","hashOfConfig":"27"},{"size":436,"mtime":1612753454034,"results":"31","hashOfConfig":"27"},{"size":457,"mtime":1612633264521,"results":"32","hashOfConfig":"27"},{"size":3037,"mtime":1612746382710,"results":"33","hashOfConfig":"27"},{"size":1594,"mtime":1612722475710,"results":"34","hashOfConfig":"27"},{"size":1257,"mtime":1612745760101,"results":"35","hashOfConfig":"27"},{"size":2702,"mtime":1612748306533,"results":"36","hashOfConfig":"27"},{"size":2173,"mtime":1612745323603,"results":"37","hashOfConfig":"27"},{"size":865,"mtime":1612682982819,"results":"38","hashOfConfig":"27"},{"size":1559,"mtime":1612693916792,"results":"39","hashOfConfig":"27"},{"size":887,"mtime":1612724867154,"results":"40","hashOfConfig":"27"},{"size":1748,"mtime":1612759035904,"results":"41","hashOfConfig":"27"},{"size":1517,"mtime":1612755703441,"results":"42","hashOfConfig":"27"},{"size":451,"mtime":1612756462317,"results":"43","hashOfConfig":"27"},{"size":514,"mtime":1612694766167,"results":"44","hashOfConfig":"27"},{"size":2860,"mtime":1612726862199,"results":"45","hashOfConfig":"27"},{"size":638,"mtime":1612730356869,"results":"46","hashOfConfig":"27"},{"size":903,"mtime":1612733032663,"results":"47","hashOfConfig":"27"},{"size":566,"mtime":1612743689104,"results":"48","hashOfConfig":"27"},{"size":599,"mtime":1612740739802,"results":"49","hashOfConfig":"27"},{"size":1070,"mtime":1612742577271,"results":"50","hashOfConfig":"27"},{"size":781,"mtime":1612758809991,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1t84vwn",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},"/home/bob/Desktop/training/frontend/movie-db/src/App.tsx",["115","116","117","118"],"/home/bob/Desktop/training/frontend/movie-db/src/index.tsx",[],["119","120"],"/home/bob/Desktop/training/frontend/movie-db/src/components/Profile.tsx",["121","122"],"import { useAuth0 } from '@auth0/auth0-react'\nimport JSONPretty from 'react-json-pretty'\n\ninterface Props {\n  \n}\n\nconst Profile = (props: Props) => {\n  const { user, isAuthenticated } = useAuth0()\n  return (\n    <>\n      {isAuthenticated && (\n        <div className='user-profile'>\n          <img src={user.picture} alt={user.name} />\n          <div>\n            <h1>Hi, {user.given_name}!</h1>\n            <p>{user.email}</p>\n          </div>\n          <h1></h1>\n          {/* <JSONPretty data={user} /> */}\n          </div>\n      )} \n    </>\n  )\n}\n\nexport default Profile\n","/home/bob/Desktop/training/frontend/movie-db/src/components/auth/LoginButton.tsx",[],["123","124"],"/home/bob/Desktop/training/frontend/movie-db/src/components/auth/SignupButton.tsx",[],"/home/bob/Desktop/training/frontend/movie-db/src/components/auth/LogoutButton.tsx",[],["125","126"],"/home/bob/Desktop/training/frontend/movie-db/src/service/index.ts",["127","128"],"import axios from 'axios'\nconst url = 'http://178.128.221.77:3000'\nconst moviesUrl = `${url}/movies/`\nconst searchUrl = `${url}/filter?search=`\nconst yearsUrl = `${url}/years`\nconst genresUrl = `${url}/genres`\nconst langUrl = `${url}/languages`\n\n\nexport const fetchMoviesBySearch = async (search: string, year: string, genre:string, lang: string, from: string, to: string, page: string) => {\n  try {\n    let yearAppend = (year === 'undefined' || year === undefined)? '':`&year=${year}`\n    let genreAppend = (genre === 'undefined' || genre === undefined)? '':`&genres=${genre}`\n    let langAppend = (lang === 'undefined' || lang === undefined)? '':`&languages=${lang}`\n    let searchAppend = (search === 'undefined')? '':`${search}`\n    let fromAppend = from === 'undefined' ? '0' : from\n    let toAppend = to === 'undefined' ? '10' : to\n    let filterUrl: string;\n\n    filterUrl = searchUrl + searchAppend + yearAppend + genreAppend + langAppend+`&max=${fromAppend || 0}`+`&min=${toAppend || 10}`+`&page=${page}`\n\n    console.log(filterUrl)\n    \n    const res = await axios.get(filterUrl)\n    return res.data\n  } catch (error) { }\n}\n\nexport const fetchMovies = async (page: string) => {\n  try {\n    const res = await axios.get(moviesUrl + `?page=${page}`)\n    return res.data\n  } catch (error) { }\n}\n\nexport const fetchMovie = async (movieId: string) => {\n  try {\n    const res = await axios.get(moviesUrl + movieId)\n    console.log(res.data)\n    return res.data\n  } catch (error) { }\n}\n\nexport const fetchComments = async (movieId: string) => {\n  try {\n    const res = await axios.get(moviesUrl + movieId + '/comments')\n    return res.data\n  } catch (error) { }\n}\n\nexport const login = async (token: string) => {\n  try {\n    const res = await axios.post('http://178.128.221.77:3000/login', {\n      \"google_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjAzYjJkMjJjMmZlY2Y4NzNlZDE5ZTViOGNmNzA0YWZiN2UyZWQ0YmUiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiI0MDc0MDg3MTgxOTIuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJhdWQiOiI0MDc0MDg3MTgxOTIuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJzdWIiOiIxMTc1NTA0MTI4MzU0MTY2NDQyMDUiLCJhdF9oYXNoIjoicFZKZEdqUTMtcFNVRXduSEZUeHE5QSIsImlhdCI6MTYxMjcyMjM2MCwiZXhwIjoxNjEyNzI1OTYwfQ.kusg5mL-YFbEzj2mHbyM0k20pNNpBx9RvmD9HnFvY-XQOpSxuzasJXemPTaSW2Sw09qC2HtHanAY_Qkdc0AsevTlNki-kDlSsX1fzY0q6i43UMCtGHok8nrS4z5yamYYxv14Zjs3x0T0f27CIICWbYB1qimh5hrfst_Jdbo-KjCu5c3pVv-cB1ojLgF-xWEOGne8E07inJpX5UCMlNkbv93eZ3K3EHZi4iA2exLegidxaz2ZNTnjc7D6jiNW7XSzzNPl-BjzqSwXTheVPlzFf7TNmTcP3fMMSdZPUsim7FLertEQELxQv0HiWDYZA5VcrvhZf5czG9fZG6TWOAq78A\"\n    })\n    console.log(res)\n  } catch (error) { }\n}\n\nexport const fetchYears = async () => {\n  try {\n    const res = await axios.get(yearsUrl)\n    return res.data\n  } catch (error) { }\n}\n\nexport const fetchGenres = async () => {\n  try {\n    const res = await axios.get(genresUrl)\n    return res.data\n  } catch (error) { }\n}\n\nexport const fetchLanguages = async () => {\n  try {\n    const res = await axios.get(langUrl)\n    return res.data\n  } catch (error) { }\n}\n","/home/bob/Desktop/training/frontend/movie-db/src/components/MovieList.tsx",[],"/home/bob/Desktop/training/frontend/movie-db/src/components/MovieCard.tsx",[],"/home/bob/Desktop/training/frontend/movie-db/src/components/MoviePage.tsx",["129"],"import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport noPoster from '../images/no-poster.jpg'\nimport { fetchComments, fetchMovie } from '../service'\nimport CommentList from './commentsection/CommentList'\n\ninterface Props extends RouteComponentProps<{ id: string }> {}\n\nconst MoviePage = (props: Props) => {\n  const movieId = props.match.params.id\n  const [movie, setMovie] = React.useState<any>({})\n  const [comments, setComments] = React.useState<any>([])\n\n  React.useEffect(() => {\n    fetchComments(movieId).then(commentsData => setComments(commentsData))\n      fetchMovie(movieId).then(movieData => setMovie(movieData))\n    console.log(movie)\n  }, [movieId])\n\n  const addDefaultSrc = (e: React.FormEvent<EventTarget>) => {\n    const target = e.target as HTMLImageElement\n    target.src = `${noPoster}`\n  }\n  \n  return (\n    <>\n        <div className=\"movie-page\">\n          <img src={movie.poster || noPoster} alt={movie.title} onError={addDefaultSrc} />\n          <div className=\"movie-info\">\n            \n          <h2 className='movie-title'>{movie.title}</h2>\n          <h3>{movie.year}</h3>\n          <h3>{movie.directors}</h3>\n          <div className=\"plot\">\n            <h4>Plot:</h4>\n            <p>{movie.fullplot}</p> \n          </div>\n\n          \n            {/* <div className=\"directors\">\n              <h4>Directors: </h4>\n                {movie.directors.map((d: any) => (\n                  <p key={d}>{d}</p>\n                ))}\n              \n            </div>\n            <div className=\"genres\">\n              <h4>Genre:</h4> \n              {movie.genres.map((genre: string) => (\n                <span className='genre' key={genre}>{genre}&nbsp;&nbsp;</span>\n              ))}\n            </div>\n            <div className=\"plot\">\n              <h4>Plot:</h4>\n              <p>{movie.fullplot}</p> \n            </div>\n            <h4>Rated: {movie.rated}</h4>\n\n            <div className=\"cast\">\n              <h4>Cast:</h4>\n              {movie.cast.map((c: string) => (\n                <p key={c}>{c}</p>\n              ))}\n            </div>\n\n            <div className=\"awards\">\n              <h4>Awards:</h4>\n              <p>Wins: {movie.awards.wins}</p>\n              <p>Nominations: {movie.awards.nominations}</p>\n            </div>\n            <h4>IMDb Rating: {movie.imdb.rating}</h4>\n\n            <div className=\"countries\">\n              <h4>Countries:</h4>\n              {movie.countries.map((c: string) => (\n                <p key={c}>{c}</p>\n              ))}\n            </div>   */}\n\n          </div>\n        </div>\n        <CommentList comments={comments} setComments={setComments} />\n      </>\n  )\n}\nexport default MoviePage\n","/home/bob/Desktop/training/frontend/movie-db/src/components/SearchList.tsx",["130"],"import React from 'react'\nimport { useAuth0 } from '@auth0/auth0-react'\nimport MovieCard from './MovieCard'\nimport { fetchMoviesBySearch } from '../service/index'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { FilterPageCounter } from './FilterPageCounter'\n\ninterface Props extends RouteComponentProps<{ query: string; year: string; genre: string; lang: string; page: string; from: string, to: string  }> {}\n\nconst SearchList = (props: Props) => {\n  const { isAuthenticated } = useAuth0()\n  const [movies, setMovies] = React.useState([])\n  const query = props.match.params.query\n  const page = props.match.params.page\n  const year = props.match.params.year\n  const genre = props.match.params.genre\n  const lang = props.match.params.lang\n  const from = props.match.params.from\n  const to = props.match.params.to\n  const [loading, setLoading] = React.useState(true)\n  const [currPage, setCurrPage] = React.useState(1)\n  const [temp, setTemp] = React.useState([])\n\n  React.useEffect(() => {\n    setLoading(true)\n    setMovies([])\n    fetchMoviesBySearch(query, year, genre, lang, from, to, page).then(searchData => {\n      setMovies(searchData.moviePost)\n      setLoading(false)\n      setCurrPage(Number(searchData.currentPage))\n    })\n    fetchMoviesBySearch(query, year, genre, lang, from, to, `${Number(page)+1}`).then(searchData => {\n      setTemp(searchData.moviePost)\n    })\n    console.log(temp)\n  }, [query, page, year, genre, lang, from, to])\n\n  if(loading){\n    return <div>Loading...</div>\n  } else if(!loading && !movies.length) {\n    return <div>No movies found.</div>\n  }\n    \n  return (\n    <>\n      {isAuthenticated && (<>\n        {query !== 'undefined' && (<h2>Search Results for \"{query}\"</h2>)}\n        <div className=\"list-header\">\n        <FilterPageCounter currPage={currPage} temp={temp} query={query} year={year} genre={genre} lang={lang} from={from} to={to} />\n      </div>\n      <hr className='list-divider'/>\n      <div className=\"movie-list search-list\">\n        {movies.map((movie: any) => (\n          <MovieCard key={movie._id} movie={movie} />\n        ))}\n      </div>\n      </>\n      )}\n    </>\n  )\n}\n\nexport default SearchList","/home/bob/Desktop/training/frontend/movie-db/src/auth0-provider-with-history.tsx",[],["131","132"],"/home/bob/Desktop/training/frontend/movie-db/src/components/BrowsePagination.tsx",["133"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { BsChevronDoubleLeft, BsChevronDoubleRight, BsChevronLeft, BsChevronRight } from 'react-icons/bs'\n\ninterface Props {\n  total: number;\n  currPage: number;\n}\n\nconst BrowsePagination = (props: Props) => {\n  const [pages, setPages] = React.useState<number[]>([])\n\n  React.useEffect(() => {\n    var pages: Array<number> = []\n    if(props.currPage <= 5) {\n      pages = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    } else {\n      for(let i = -5; i < 5; i++) {\n        const pageNum = props.currPage + i\n        if(pageNum <= props.total) {pages.push(pageNum)}\n      }\n    }\n    setPages(pages)\n  }, [props.currPage])\n\n  return (\n    <div className=\"pagination\">\n      <ul className=\"page-ul\">\n        {(props.currPage !== 1) && (<>\n        <li><Link className=\"link\" to={`/browse/page=1`}><BsChevronDoubleLeft /></Link></li>\n        <li><Link className=\"link\" to={`/browse/page=${props.currPage - 1}`}><BsChevronLeft /></Link></li>\n        </>)}\n        \n        {pages.map(p =>(\n          <li className='nums' key={p}>\n            <Link className={p===props.currPage? 'link curr-page' : 'link'} to={`/browse/page=${p}`}>{p}</Link>\n          </li>\n        ))}\n        {(props.currPage !== props.total) && (<>\n        <li><Link className=\"link\" to={`/browse/page=${props.currPage + 1}`}><BsChevronRight /></Link></li>\n        <li><Link className=\"link\" to={`/browse/page=${props.total}`}><BsChevronDoubleRight /></Link></li>\n        </>)}\n      </ul>\n    </div>\n  )\n}\n\nexport default BrowsePagination\n","/home/bob/Desktop/training/frontend/movie-db/src/components/navbar/SearchBox.tsx",[],["134","135"],"/home/bob/Desktop/training/frontend/movie-db/src/components/navbar/NavBar.tsx",[],"/home/bob/Desktop/training/frontend/movie-db/src/components/HomePage.tsx",["136","137"],"import React from 'react'\nimport { useAuth0 } from '@auth0/auth0-react'\nimport axios from 'axios'\nimport MovieCard from './MovieCard'\nimport JSONPretty from 'react-json-pretty'\nimport Analytics from './Analytics'\ninterface Props {\n  \n}\n\nconst HomePage = (props: Props) => {\n  const { user, isAuthenticated } = useAuth0()\n  const [newMovies, setNewMovies] = React.useState<any>([])\n  const [topMovies, setTopMovies] = React.useState<any>([])\n  const [loading, setLoading] = React.useState(true)\n\n  React.useEffect(() => {\n    setLoading(true)\n    axios.get('http://178.128.221.77:3000/filter?year=2015').then(res => setNewMovies(res.data.moviePost))\n    axios.get('http://178.128.221.77:3000/filter?max=8.5&min=10').then(res => {\n      setTopMovies(res.data.moviePost)\n      setLoading(false)\n    })\n  }, [])\n\n  if(loading) { return <div>Loading...</div> }\n  return (\n    \n    <>\n      {isAuthenticated && (\n        <div className=\"homepage\">\n          <h1>New Movies</h1>\n          <div className=\"new-movies\">\n          {newMovies.map((movie: any) => (\n            <MovieCard key={movie._id} movie={movie} />\n          ))}\n          </div>\n          <h1>Top Rated Movies</h1>\n          <div className=\"top-movies\">\n          {topMovies.map((movie: any) => (\n            <MovieCard key={movie._id} movie={movie} />\n          ))}\n          </div>\n          <h1>Movie Analytics</h1>\n          <Analytics />\n        {/* <JSONPretty data={newMovies} /> */}\n        </div>\n      )} \n    </>\n  )\n}\n\nexport default HomePage\n","/home/bob/Desktop/training/frontend/movie-db/src/components/LandingPage.tsx",[],"/home/bob/Desktop/training/frontend/movie-db/src/components/filter/FilterButton.tsx",["138"],"import React from 'react'\nimport { BiSlider } from 'react-icons/bi'\nimport PageCounter from '../PageCounter'\n\ninterface Props {\n  toggleFilter: boolean;\n  setToggleFilter: (v: boolean) => void;\n\n}\n\nconst FilterButton = ({ toggleFilter, setToggleFilter }: Props) => {\n  const toggleFilterHandler = () => {\n    setToggleFilter(!toggleFilter)\n  }\n\n  return (\n      <div className='filter-btn' onClick={toggleFilterHandler}>\n        <h3>Filter</h3>\n        <BiSlider />\n      </div>\n  )\n}\n\nexport default FilterButton\n","/home/bob/Desktop/training/frontend/movie-db/src/components/filter/FilterOptions.tsx",[],"/home/bob/Desktop/training/frontend/movie-db/src/components/PageCounter.tsx",[],"/home/bob/Desktop/training/frontend/movie-db/src/components/FilterPageCounter.tsx",[],"/home/bob/Desktop/training/frontend/movie-db/src/components/commentsection/Comment.tsx",[],"/home/bob/Desktop/training/frontend/movie-db/src/components/commentsection/CommentList.tsx",[],"/home/bob/Desktop/training/frontend/movie-db/src/components/commentsection/CommentForm.tsx",[],"/home/bob/Desktop/training/frontend/movie-db/src/components/Analytics.tsx",["139"],"import axios from 'axios'\nimport React from 'react'\nimport { Tooltip, BarChart, CartesianGrid, XAxis, YAxis, Bar} from 'recharts'\n\ninterface Props {\n  \n}\n\nconst Analytics = (props: Props) => {\n  const [data, setData] = React.useState([])\n  \n  React.useEffect(() => {\n    axios.get('http://178.128.221.77:3000/analytics/years').then(res => {\n      setData(res.data)\n      data.sort((a:any, b:any) => a._id - b._id)\n    })\n    \n    console.log(data)\n  }, [])\n\n\n  return (\n    <div className='graph'>\n      <BarChart width={1800} height={500} data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"_id\" />\n        <YAxis />\n        <Tooltip />\n        <Bar dataKey=\"count\" fill=\"#8884d8\" />\n        </BarChart>\n    </div>\n  )\n}\n\nexport default Analytics\n",{"ruleId":"140","severity":1,"message":"141","line":13,"column":51,"nodeType":"142","messageId":"143","endLine":13,"endColumn":56},{"ruleId":"140","severity":1,"message":"144","line":15,"column":8,"nodeType":"142","messageId":"143","endLine":15,"endColumn":14},{"ruleId":"140","severity":1,"message":"145","line":19,"column":11,"nodeType":"142","messageId":"143","endLine":19,"endColumn":33},{"ruleId":"140","severity":1,"message":"146","line":20,"column":11,"nodeType":"142","messageId":"143","endLine":20,"endColumn":26},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"140","severity":1,"message":"151","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":18},{"ruleId":"152","severity":1,"message":"153","line":19,"column":11,"nodeType":"154","endLine":19,"endColumn":15},{"ruleId":"147","replacedBy":"155"},{"ruleId":"149","replacedBy":"156"},{"ruleId":"147","replacedBy":"157"},{"ruleId":"149","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":20,"column":107,"nodeType":"161","messageId":"162","endLine":20,"endColumn":108},{"ruleId":"159","severity":1,"message":"160","line":20,"column":132,"nodeType":"161","messageId":"162","endLine":20,"endColumn":133},{"ruleId":"163","severity":1,"message":"164","line":18,"column":6,"nodeType":"165","endLine":18,"endColumn":15,"suggestions":"166"},{"ruleId":"163","severity":1,"message":"167","line":36,"column":6,"nodeType":"165","endLine":36,"endColumn":48,"suggestions":"168"},{"ruleId":"147","replacedBy":"169"},{"ruleId":"149","replacedBy":"170"},{"ruleId":"163","severity":1,"message":"171","line":24,"column":6,"nodeType":"165","endLine":24,"endColumn":22,"suggestions":"172"},{"ruleId":"147","replacedBy":"173"},{"ruleId":"149","replacedBy":"174"},{"ruleId":"140","severity":1,"message":"151","line":5,"column":8,"nodeType":"142","messageId":"143","endLine":5,"endColumn":18},{"ruleId":"140","severity":1,"message":"175","line":12,"column":11,"nodeType":"142","messageId":"143","endLine":12,"endColumn":15},{"ruleId":"140","severity":1,"message":"176","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":19},{"ruleId":"163","severity":1,"message":"177","line":19,"column":6,"nodeType":"165","endLine":19,"endColumn":8,"suggestions":"178"},"@typescript-eslint/no-unused-vars","'login' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'getAccessTokenSilently' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","no-native-reassign",["179"],"no-negated-in-lhs",["180"],"'JSONPretty' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["179"],["180"],["179"],["180"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'movie'. Either include it or remove the dependency array.","ArrayExpression",["181"],"React Hook React.useEffect has a missing dependency: 'temp'. Either include it or remove the dependency array.",["182"],["179"],["180"],"React Hook React.useEffect has a missing dependency: 'props.total'. Either include it or remove the dependency array.",["183"],["179"],["180"],"'user' is assigned a value but never used.","'PageCounter' is defined but never used.","React Hook React.useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["184"],"no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [movie, movieId]",{"range":"193","text":"194"},"Update the dependencies array to be: [query, page, year, genre, lang, from, to, temp]",{"range":"195","text":"196"},"Update the dependencies array to be: [props.currPage, props.total]",{"range":"197","text":"198"},"Update the dependencies array to be: [data]",{"range":"199","text":"200"},[686,695],"[movie, movieId]",[1422,1464],"[query, page, year, genre, lang, from, to, temp]",[658,674],"[props.currPage, props.total]",[453,455],"[data]"]